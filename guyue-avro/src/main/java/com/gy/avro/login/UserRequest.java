/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package com.gy.avro.login;

import org.apache.avro.specific.SpecificData;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class UserRequest extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = -224189103492247361L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"UserRequest\",\"namespace\":\"com.gy.avro.login\",\"fields\":[{\"name\":\"name\",\"type\":\"string\"},{\"name\":\"password\",\"type\":\"string\"},{\"name\":\"devicetoken\",\"type\":\"string\"}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<UserRequest> ENCODER =
      new BinaryMessageEncoder<UserRequest>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<UserRequest> DECODER =
      new BinaryMessageDecoder<UserRequest>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   */
  public static BinaryMessageDecoder<UserRequest> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   */
  public static BinaryMessageDecoder<UserRequest> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<UserRequest>(MODEL$, SCHEMA$, resolver);
  }

  /** Serializes this UserRequest to a ByteBuffer. */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /** Deserializes a UserRequest from a ByteBuffer. */
  public static UserRequest fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  @Deprecated public java.lang.CharSequence name;
  @Deprecated public java.lang.CharSequence password;
  @Deprecated public java.lang.CharSequence devicetoken;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public UserRequest() {}

  /**
   * All-args constructor.
   * @param name The new value for name
   * @param password The new value for password
   * @param devicetoken The new value for devicetoken
   */
  public UserRequest(java.lang.CharSequence name, java.lang.CharSequence password, java.lang.CharSequence devicetoken) {
    this.name = name;
    this.password = password;
    this.devicetoken = devicetoken;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return name;
    case 1: return password;
    case 2: return devicetoken;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: name = (java.lang.CharSequence)value$; break;
    case 1: password = (java.lang.CharSequence)value$; break;
    case 2: devicetoken = (java.lang.CharSequence)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'name' field.
   * @return The value of the 'name' field.
   */
  public java.lang.CharSequence getName() {
    return name;
  }

  /**
   * Sets the value of the 'name' field.
   * @param value the value to set.
   */
  public void setName(java.lang.CharSequence value) {
    this.name = value;
  }

  /**
   * Gets the value of the 'password' field.
   * @return The value of the 'password' field.
   */
  public java.lang.CharSequence getPassword() {
    return password;
  }

  /**
   * Sets the value of the 'password' field.
   * @param value the value to set.
   */
  public void setPassword(java.lang.CharSequence value) {
    this.password = value;
  }

  /**
   * Gets the value of the 'devicetoken' field.
   * @return The value of the 'devicetoken' field.
   */
  public java.lang.CharSequence getDevicetoken() {
    return devicetoken;
  }

  /**
   * Sets the value of the 'devicetoken' field.
   * @param value the value to set.
   */
  public void setDevicetoken(java.lang.CharSequence value) {
    this.devicetoken = value;
  }

  /**
   * Creates a new UserRequest RecordBuilder.
   * @return A new UserRequest RecordBuilder
   */
  public static com.gy.avro.login.UserRequest.Builder newBuilder() {
    return new com.gy.avro.login.UserRequest.Builder();
  }

  /**
   * Creates a new UserRequest RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new UserRequest RecordBuilder
   */
  public static com.gy.avro.login.UserRequest.Builder newBuilder(com.gy.avro.login.UserRequest.Builder other) {
    return new com.gy.avro.login.UserRequest.Builder(other);
  }

  /**
   * Creates a new UserRequest RecordBuilder by copying an existing UserRequest instance.
   * @param other The existing instance to copy.
   * @return A new UserRequest RecordBuilder
   */
  public static com.gy.avro.login.UserRequest.Builder newBuilder(com.gy.avro.login.UserRequest other) {
    return new com.gy.avro.login.UserRequest.Builder(other);
  }

  /**
   * RecordBuilder for UserRequest instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<UserRequest>
    implements org.apache.avro.data.RecordBuilder<UserRequest> {

    private java.lang.CharSequence name;
    private java.lang.CharSequence password;
    private java.lang.CharSequence devicetoken;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(com.gy.avro.login.UserRequest.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.name)) {
        this.name = data().deepCopy(fields()[0].schema(), other.name);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.password)) {
        this.password = data().deepCopy(fields()[1].schema(), other.password);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.devicetoken)) {
        this.devicetoken = data().deepCopy(fields()[2].schema(), other.devicetoken);
        fieldSetFlags()[2] = true;
      }
    }

    /**
     * Creates a Builder by copying an existing UserRequest instance
     * @param other The existing instance to copy.
     */
    private Builder(com.gy.avro.login.UserRequest other) {
            super(SCHEMA$);
      if (isValidValue(fields()[0], other.name)) {
        this.name = data().deepCopy(fields()[0].schema(), other.name);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.password)) {
        this.password = data().deepCopy(fields()[1].schema(), other.password);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.devicetoken)) {
        this.devicetoken = data().deepCopy(fields()[2].schema(), other.devicetoken);
        fieldSetFlags()[2] = true;
      }
    }

    /**
      * Gets the value of the 'name' field.
      * @return The value.
      */
    public java.lang.CharSequence getName() {
      return name;
    }

    /**
      * Sets the value of the 'name' field.
      * @param value The value of 'name'.
      * @return This builder.
      */
    public com.gy.avro.login.UserRequest.Builder setName(java.lang.CharSequence value) {
      validate(fields()[0], value);
      this.name = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'name' field has been set.
      * @return True if the 'name' field has been set, false otherwise.
      */
    public boolean hasName() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'name' field.
      * @return This builder.
      */
    public com.gy.avro.login.UserRequest.Builder clearName() {
      name = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'password' field.
      * @return The value.
      */
    public java.lang.CharSequence getPassword() {
      return password;
    }

    /**
      * Sets the value of the 'password' field.
      * @param value The value of 'password'.
      * @return This builder.
      */
    public com.gy.avro.login.UserRequest.Builder setPassword(java.lang.CharSequence value) {
      validate(fields()[1], value);
      this.password = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'password' field has been set.
      * @return True if the 'password' field has been set, false otherwise.
      */
    public boolean hasPassword() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'password' field.
      * @return This builder.
      */
    public com.gy.avro.login.UserRequest.Builder clearPassword() {
      password = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'devicetoken' field.
      * @return The value.
      */
    public java.lang.CharSequence getDevicetoken() {
      return devicetoken;
    }

    /**
      * Sets the value of the 'devicetoken' field.
      * @param value The value of 'devicetoken'.
      * @return This builder.
      */
    public com.gy.avro.login.UserRequest.Builder setDevicetoken(java.lang.CharSequence value) {
      validate(fields()[2], value);
      this.devicetoken = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'devicetoken' field has been set.
      * @return True if the 'devicetoken' field has been set, false otherwise.
      */
    public boolean hasDevicetoken() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'devicetoken' field.
      * @return This builder.
      */
    public com.gy.avro.login.UserRequest.Builder clearDevicetoken() {
      devicetoken = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public UserRequest build() {
      try {
        UserRequest record = new UserRequest();
        record.name = fieldSetFlags()[0] ? this.name : (java.lang.CharSequence) defaultValue(fields()[0]);
        record.password = fieldSetFlags()[1] ? this.password : (java.lang.CharSequence) defaultValue(fields()[1]);
        record.devicetoken = fieldSetFlags()[2] ? this.devicetoken : (java.lang.CharSequence) defaultValue(fields()[2]);
        return record;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<UserRequest>
    WRITER$ = (org.apache.avro.io.DatumWriter<UserRequest>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<UserRequest>
    READER$ = (org.apache.avro.io.DatumReader<UserRequest>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

}
